#!/bin/bash -ex

LOCAL_IF=${LOCAL_IF:-$HOSTNAME-eth0}
EXT_IF=eth0

echo Starting networking for $LOCAL_IF and $EXT_IF

while ! ifconfig -a | fgrep -q $LOCAL_IF; do
    echo Waiting for interface $LOCAL_IF to exist...
    sleep 1
done

# Enable a web-server for configuration access.
mkdir -p /tmp/public
(cd /tmp/public; python -m SimpleHTTPServer &)

# Enable NAT to the outside world, through the docker bridge.
echo 1 > /proc/sys/net/ipv4/ip_forward
iptables -t nat -A POSTROUTING -o $EXT_IF -j MASQUERADE
iptables -A FORWARD -i $EXT_IF -o $LOCAL_IF -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i $LOCAL_IF -o $EXT_IF -j ACCEPT

# Pick a random DHCP range to force clients to pick a new address.
subnet=$((RANDOM % 99 + 1))
echo Configuring with subnet 10.20.$subnet.XX
echo dhcp-range=10.20.$subnet.100,10.20.$subnet.254 >> /etc/dnsmasq.conf

if ! ip addr show dev $LOCAL_IF | fgrep -q 'inet '; then
  echo Assigning gateway address 10.20.$subnet.1/16
  ip addr add 10.20.$subnet.1/16 dev $LOCAL_IF
fi

echo dhcp-host=*,ignore >> /etc/dnsmasq.conf

echo Blocking for all eternity.

config_file='/etc/dnsmasq.conf'
echo dhcp-host before ignore 

# Wait until there's at least one DHCP device
while [ $(cat $config_file | grep "dhcp-host=\*,ignore" | wc -l) -ne 0 ]; do 
    tail -10 $config_file
    sleep 1
done

echo dhcp-host ignore removed 

checksum=$(md5sum $config_file | awk '{print $1}')
echo Starting dnsmasq at $(date)
dnsmasq --log-facility=/tmp/dnsmasq.log --log-dhcp &

while true; do
    echo Checking config at $(date)
    new_checksum=$(md5sum $config_file | awk '{print $1}')
    if [ $checksum == $new_checksum ]; then
        sleep 2
        continue
    fi 
    echo Config changed. Retarting dnsmasq at $(date)
    while [ -z $(cat /var/run/dnsmasq.pid) ]; do
	    sleep 1
    done
    echo Current dnsmasq PID found. Retarting dnsmasq at $(date) with config
    tail -20 $config_file
    kill $(cat /var/run/dnsmasq.pid) || true
    rm -f /var/run/dnsmasq.pid
    checksum=$(md5sum $config_file | awk '{print $1}')
    dnsmasq --log-facility=/tmp/dnsmasq.log --log-dhcp &
done
