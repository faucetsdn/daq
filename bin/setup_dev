#!/bin/bash -e
#
# Setup things for directly running the core system. Not required for just
# running a downloaded container.
#
# If you just want to get up and go, see bin/setup_base.
#

ROOT=$(dirname $0)/..
cd $ROOT

FAUCETR=${DAQ_FAUCET_REPO:-https://github.com/faucetsdn/faucet}
FAUCETB=${DAQ_FAUCET_BRANCH}
FAUCETX=$(cat misc/FAUCET_VERSION)
FAUCETV=${DAQ_FAUCET_VER:-$FAUCETX}
MININET=https://github.com/mininet/mininet
MININETV=2.3.0d6

if [ -f .daq.local ]; then
    echo Loading config from .daq.local
    source .daq.local
fi

if [ "$FAUCETX" != "$FAUCETV" ]; then
    echo $FAUCETV > misc/FAUCET_VERSION
fi

if [ -z "$AG" ]; then
    AG="sudo apt-get -qqy --no-install-recommends"
fi

if [ -z "$PIP" ]; then
    PIP="python3 -m pip"
fi

if [ -n "$TRAVIS" ]; then
    DAQ_CONTAINER=travis
fi

echo AG is $AG
echo PIP is $PIP
echo Setup root is $PWD

if [ "$DAQ_BUILD" == "no" ]; then
    echo Skipping core setup because DAQ_BUILD=no
    exit 0
fi

# Hacky workaround for https://travis-ci.community/t/sometimes-build-fails-when-apt-is-updating-postgresql-apt-repository/4872/17
# Need to remove the || true at the end of the update line. Also in bin/setup_base.
echo $AG update
$AG update || true

echo $AG install
$AG install lsb-release
release=$(lsb_release -cs)
echo LSB release version $release

$AG install \
    software-properties-common apt-transport-https iproute2 \
    git ethtool curl apache2-utils iputils-ping lsof \
    ca-certificates sudo net-tools tcpdump build-essential \
    isc-dhcp-client network-manager netcat gnupg2 strace \
    python3 python3-pkg-resources python3-setuptools python3-dev \
    python3-pip openjdk-8-jdk python emacs-nox python3-venv libffi-dev jq pandoc

# Jump through some hoops for mininet, which still has some python2 deps.
$AG install python-pip
python -m pip install setuptools

# Can't use venv inside of containers because of absolute paths.
if [ -n "$DAQ_CONTAINER" ]; then
    echo Skipping venv activation.
    mkdir -p venv/bin
    touch venv/bin/activate
    PIP="sudo -H $PIP"
else
    # Fix permissions in case they have wandered...
    test -f venv && sudo chown `stat . -c %u:%g` -R venv/
    python3 -m venv venv
    source venv/bin/activate
fi

python3 --version

echo Updating pip...
$PIP install --upgrade pip
$PIP -V

echo Installing python dependencies...
$PIP install wheel
$PIP install --upgrade --index-url=https://pypi.python.org/simple Jinja2 \
    pylint==2.4.2 cryptography requests netifaces codecov coverage setuptools \
    firebase-admin==2.16.0 \
    google-cloud-pubsub==0.40.0 \
    google-api-core==1.13.0 \
    google-cloud-storage==1.16.1 \
    google-cloud-firestore==0.32.1 \
    WeasyPrint==50 \
    pypandoc==1.4

if [ "$DAQ_CONTAINER" != travis ]; then
    $PIP install pyyaml==3.12
fi

$PIP freeze

if [ -d mininet ]; then
    echo Checking mininet version matches $MININETV...
    targetrev=$(cd mininet; git rev-parse $MININETV)
    instrev=$(cd mininet; git rev-parse HEAD)
    if [ "$targetrev" != "$instrev" ]; then
        echo Target mininet version $MININETV does not match installed version.
        false
    fi
    if [ ! -f mininet/.the_house_that_daq_built ]; then
        echo Mininet build seems to be incomplete. Try bin/clean_dev and try again.
        false
    fi
else
    echo Cloning $MININET $MININETV...
    git clone $MININET
    (
        cd mininet
        git reset --hard $MININETV
        for i in ssh pep8 pyflakes python-pexpect pylint xterm ; do
            perl -pi -e "s/${i}//g" util/install.sh ;
        done
        sed -i s/cgroup-bin/cgroup-tools/ util/install.sh
        util/install.sh -n
    )
    touch mininet/.the_house_that_daq_built
fi

echo Resetting .cache directory permissions...
test -n "$USER" && sudo chown $USER -R $HOME/.cache

if [ -d faucet ]; then
    echo faucet already installed, faucet version $(cd faucet; git rev-list -n 1 HEAD)
elif [ -z "$FAUCETV" ]; then
    echo No faucet version found, skipping.
else
    echo Cloning $FAUCETR...
    git clone $FAUCETR faucet
    if [ -n "$FAUCETB" ]; then
        echo Switching to branch $FAUCETB...
        (cd faucet; git checkout $FAUCETB --)
        (cd faucet; git rev-list -n 1 HEAD) > misc/FAUCET_VERSION
        (cd faucet; git status)
        echo Updated faucet version to $(cat misc/FAUCET_VERSION)
    else
        echo Forcing faucet version $FAUCETV
        (cd faucet; git reset --hard $FAUCETV)
    fi
fi
