#!/bin/bash -e

runargs=

if [ ! -f local/system.conf ]; then
    echo Installing local/system.conf...
    mkdir -p local
    cp misc/system.conf local/
fi

# Out with the old, in with the new (use faucet instead).
sudo /etc/init.d/openvswitch-controller stop || true

echo -n "Last DAQ commit "
git log -n 1 --pretty=format:"%h - %an, %ar : %s" || true
echo

if [ -d faucet ]; then
    echo -n "Last FAUCET commit "
    (cd $FAUCET; git log -n 1 --pretty=format:"%h - %an, %ar : %s" || true)
    echo
fi

if [ -n "$DAQ_MUD" ]; then
    bin/mudacl
fi

if [ -n "$DAQ_VALIDATE" ]; then
    # Hack to work-around situations where output is not fully consumed.
    validator/bin/test.sh || (sleep 10; false)
fi

if [ "$DAQ_BUILD" == in ]; then
    if [ -n "$runargs" ]; then
        echo Error -- build args must be first.
        false
    fi
    runargs+=" latest reuse"
elif [ "$DAQ_BUILD" == "no" -a "$TRAVIS_BRANCH" == release ]; then
    echo Not running tests because no-build on release branch.
    exit 0
fi

if [ -n "$DAQ_CONF" ]; then
    runargs+=" network_config=$DAQ_CONF"
fi

if [ -n "$DAQ_RUNS" ]; then
    runargs+=" -f run_limit=$DAQ_RUNS"
else
    runargs+=" -s"
fi

if [ -n "$DAQ_LOG" ]; then
    runargs+=" daq_loglevel=$DAQ_LOG"
fi

fail_mode=${DAQ_FAIL#!}
failed=0
echo Running DAQ test...
if [ "$DAQ_MODE" == "in" ]; then
    cmd/run $runargs || failed=$?
else
    DAQ_FAUX_OPTS=$fail_mode cmd/run local $runargs || failed=$?
fi

echo Finished run with exit code $failed.

if [ -n "$DAQ_FAIL" ]; then
    if [ "$fail_mode" == "$DAQ_FAIL" -a "$failed" == 0 ]; then
        echo Test did not fail as expected with $DAQ_FAIL.
        false
    else
        echo Succeeding through expected failure.
    fi
elif [ "$failed" != 0 ]; then
    echo Test failed.
    false
fi

if [ -n "$DAQ_VERIFY" ]; then
    result=$(cat $DAQ_VERIFY)
    echo Result in $DAQ_VERIFY is $result.
    if [ "$result" != 0 ]; then
        echo Test verification result is not 0.
        false
    fi
fi
