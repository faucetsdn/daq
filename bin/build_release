#!/bin/bash -e

if [ $# != 1 ]; then
    echo $0 RELEASE_VERSION
    false
fi

VERSION=$1
shift

ROOT=$(realpath $(dirname $0)/..)
cd $ROOT

changes=`git status --porcelain`
if [ -n "$changes" ]; then
    echo Working tree not clean.
    false
fi

git checkout release_stable
git fetch faucet
git merge faucet/release_stable
git checkout master

changed=`git diff --name-only release_stable docs/changelog.md`
if [ -z "$changed" ]; then
    git log release_stable..HEAD --pretty=oneline | sed -e 's/^[a-z0-9]\+ //g'
    echo docs/changelog.md has not been updated since last release_stable
    echo Use the log lines above for inspiration.
    false
fi

tagged=`git rev-list -n 1 $VERSION 2>/dev/null` || true
if [ -n "$tagged" ]; then
    echo Tag $VERSION already exists. Try the next version.
    false
fi

source bin/config_base.sh

if [ "$host_tests" != config/modules/all.conf ]; then
    echo Configure your system with host_tests=config/modules/all.conf
    false
fi

cmd/build force $VERSION

cmd/build push

git commit -a -m "$VERSION release"
git tag -a $VERSION -m "$VERSION release"
firebase/deploy.sh bos-daq-testing

git push
git push --tags

# Check to see if a remote 'faucet' is defined, and if so, also update that.
faucetgit=`git config remote.faucet.url`
if [ -n "$faucetgit" ]; then
    git push faucet
    git push faucet --tags
fi

git checkout release_testing && git reset --hard $VERSION
git push
if [ -n "$faucetgit" ]; then
    git push faucet
fi

git log -n 1

# QA pass to make sure everything is ok.
# `firebase/deploy.sh daq-qualification-labs`
# `git checkout release_stable && git reset --hard $VERSION`
# `git push`
