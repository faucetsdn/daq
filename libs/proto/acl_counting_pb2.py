# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: daq/proto/acl_counting.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='daq/proto/acl_counting.proto',
  package='',
  syntax='proto3',
  serialized_pb=_b('\n\x1c\x64\x61q/proto/acl_counting.proto\"r\n\tAclCounts\x12(\n\x07\x64\x65vices\x18\x01 \x03(\x0b\x32\x17.AclCounts.DevicesEntry\x1a;\n\x0c\x44\x65vicesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x1a\n\x05value\x18\x02 \x01(\x0b\x32\x0b.RuleCounts:\x02\x38\x01\"}\n\nRuleCounts\x12%\n\x05rules\x18\x01 \x03(\x0b\x32\x16.RuleCounts.RulesEntry\x12\x0e\n\x06\x65rrors\x18\x02 \x03(\t\x1a\x38\n\nRulesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x19\n\x05value\x18\x02 \x01(\x0b\x32\n.RuleCount:\x02\x38\x01\"!\n\tRuleCount\x12\x14\n\x0cpacket_count\x18\x01 \x01(\x05\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_ACLCOUNTS_DEVICESENTRY = _descriptor.Descriptor(
  name='DevicesEntry',
  full_name='AclCounts.DevicesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='AclCounts.DevicesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='AclCounts.DevicesEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=87,
  serialized_end=146,
)

_ACLCOUNTS = _descriptor.Descriptor(
  name='AclCounts',
  full_name='AclCounts',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='devices', full_name='AclCounts.devices', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_ACLCOUNTS_DEVICESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=32,
  serialized_end=146,
)


_RULECOUNTS_RULESENTRY = _descriptor.Descriptor(
  name='RulesEntry',
  full_name='RuleCounts.RulesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='RuleCounts.RulesEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='RuleCounts.RulesEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=217,
  serialized_end=273,
)

_RULECOUNTS = _descriptor.Descriptor(
  name='RuleCounts',
  full_name='RuleCounts',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='rules', full_name='RuleCounts.rules', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='errors', full_name='RuleCounts.errors', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_RULECOUNTS_RULESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=148,
  serialized_end=273,
)


_RULECOUNT = _descriptor.Descriptor(
  name='RuleCount',
  full_name='RuleCount',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='packet_count', full_name='RuleCount.packet_count', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=275,
  serialized_end=308,
)

_ACLCOUNTS_DEVICESENTRY.fields_by_name['value'].message_type = _RULECOUNTS
_ACLCOUNTS_DEVICESENTRY.containing_type = _ACLCOUNTS
_ACLCOUNTS.fields_by_name['devices'].message_type = _ACLCOUNTS_DEVICESENTRY
_RULECOUNTS_RULESENTRY.fields_by_name['value'].message_type = _RULECOUNT
_RULECOUNTS_RULESENTRY.containing_type = _RULECOUNTS
_RULECOUNTS.fields_by_name['rules'].message_type = _RULECOUNTS_RULESENTRY
DESCRIPTOR.message_types_by_name['AclCounts'] = _ACLCOUNTS
DESCRIPTOR.message_types_by_name['RuleCounts'] = _RULECOUNTS
DESCRIPTOR.message_types_by_name['RuleCount'] = _RULECOUNT

AclCounts = _reflection.GeneratedProtocolMessageType('AclCounts', (_message.Message,), dict(

  DevicesEntry = _reflection.GeneratedProtocolMessageType('DevicesEntry', (_message.Message,), dict(
    DESCRIPTOR = _ACLCOUNTS_DEVICESENTRY,
    __module__ = 'daq.proto.acl_counting_pb2'
    # @@protoc_insertion_point(class_scope:AclCounts.DevicesEntry)
    ))
  ,
  DESCRIPTOR = _ACLCOUNTS,
  __module__ = 'daq.proto.acl_counting_pb2'
  # @@protoc_insertion_point(class_scope:AclCounts)
  ))
_sym_db.RegisterMessage(AclCounts)
_sym_db.RegisterMessage(AclCounts.DevicesEntry)

RuleCounts = _reflection.GeneratedProtocolMessageType('RuleCounts', (_message.Message,), dict(

  RulesEntry = _reflection.GeneratedProtocolMessageType('RulesEntry', (_message.Message,), dict(
    DESCRIPTOR = _RULECOUNTS_RULESENTRY,
    __module__ = 'daq.proto.acl_counting_pb2'
    # @@protoc_insertion_point(class_scope:RuleCounts.RulesEntry)
    ))
  ,
  DESCRIPTOR = _RULECOUNTS,
  __module__ = 'daq.proto.acl_counting_pb2'
  # @@protoc_insertion_point(class_scope:RuleCounts)
  ))
_sym_db.RegisterMessage(RuleCounts)
_sym_db.RegisterMessage(RuleCounts.RulesEntry)

RuleCount = _reflection.GeneratedProtocolMessageType('RuleCount', (_message.Message,), dict(
  DESCRIPTOR = _RULECOUNT,
  __module__ = 'daq.proto.acl_counting_pb2'
  # @@protoc_insertion_point(class_scope:RuleCount)
  ))
_sym_db.RegisterMessage(RuleCount)


_ACLCOUNTS_DEVICESENTRY.has_options = True
_ACLCOUNTS_DEVICESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_RULECOUNTS_RULESENTRY.has_options = True
_RULECOUNTS_RULESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
# @@protoc_insertion_point(module_scope)
