# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: daq/proto/device_testing.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='daq/proto/device_testing.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1e\x64\x61q/proto/device_testing.proto\"#\n\rSessionParams\x12\x12\n\ndevice_mac\x18\x01 \x01(\t\"&\n\x0fSessionProgress\x12\x13\n\x0b\x65ndpoint_ip\x18\x01 \x01(\t2E\n\rDeviceTesting\x12\x34\n\x0cStartSession\x12\x0e.SessionParams\x1a\x10.SessionProgress\"\x00\x30\x01\x62\x06proto3'
)




_SESSIONPARAMS = _descriptor.Descriptor(
  name='SessionParams',
  full_name='SessionParams',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='device_mac', full_name='SessionParams.device_mac', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=69,
)


_SESSIONPROGRESS = _descriptor.Descriptor(
  name='SessionProgress',
  full_name='SessionProgress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='endpoint_ip', full_name='SessionProgress.endpoint_ip', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=71,
  serialized_end=109,
)

DESCRIPTOR.message_types_by_name['SessionParams'] = _SESSIONPARAMS
DESCRIPTOR.message_types_by_name['SessionProgress'] = _SESSIONPROGRESS
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SessionParams = _reflection.GeneratedProtocolMessageType('SessionParams', (_message.Message,), {
  'DESCRIPTOR' : _SESSIONPARAMS,
  '__module__' : 'daq.proto.device_testing_pb2'
  # @@protoc_insertion_point(class_scope:SessionParams)
  })
_sym_db.RegisterMessage(SessionParams)

SessionProgress = _reflection.GeneratedProtocolMessageType('SessionProgress', (_message.Message,), {
  'DESCRIPTOR' : _SESSIONPROGRESS,
  '__module__' : 'daq.proto.device_testing_pb2'
  # @@protoc_insertion_point(class_scope:SessionProgress)
  })
_sym_db.RegisterMessage(SessionProgress)



_DEVICETESTING = _descriptor.ServiceDescriptor(
  name='DeviceTesting',
  full_name='DeviceTesting',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=111,
  serialized_end=180,
  methods=[
  _descriptor.MethodDescriptor(
    name='StartSession',
    full_name='DeviceTesting.StartSession',
    index=0,
    containing_service=None,
    input_type=_SESSIONPARAMS,
    output_type=_SESSIONPROGRESS,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_DEVICETESTING)

DESCRIPTOR.services_by_name['DeviceTesting'] = _DEVICETESTING

# @@protoc_insertion_point(module_scope)
