#!/bin/bash -e

source reporting.sh

REPORT=/tmp/report.txt
LOG=/tmp/udmi.log

# Necessary to reach gcp. Should be done by framework but this works for now.
route add default gw $GATEWAY_IP

ip addr
route -n
ping -c 2 $GATEWAY_IP
arp -n

gcp_cred=/config/inst/gcp_service_account.json
gcp_topic=target
schema_path=schema
subscription=daq-validator-dev
message_types="state pointset system"

device_id=`jq -r .device_id /config/device/module_config.json`

# Enable dns for GCP lookup
echo "nameserver 8.8.8.8" >> /etc/resolv.conf

if [ "$device_id" == null ]; then
    skip="No device id"
elif [ ! -f $gcp_cred ]; then
    skip="No credentials"
else
    skip=
fi

if [ -n "$skip" ]; then
    echo Skipping udmi test because $skip
    for message_type in provision $message_types; do
        TEST_NAME="cloud.udmi.$message_type"
        TEST_DESCRIPTION="Validates device $message_type payload."
        RESULT_AND_SUMMARY="RESULT skip $TEST_NAME $skip"
        write_out_result $REPORT "$TEST_NAME" "$TEST_DESCRIPTION" \
                         "$skip" "$RESULT_AND_SUMMARY"
    done
    exit 0
fi

project_id=`jq -r .project_id $gcp_cred`
service_id=`jq -r .client_email $gcp_cred`
service_id=${service_id%@*}

export GOOGLE_APPLICATION_CREDENTIALS=$gcp_cred
export GOOGLE_CLOUD_PROJECT=$project_id

echo Using credentials from $GOOGLE_APPLICATION_CREDENTIALS
echo Extracted project $project_id
echo Extracted service $service_id
echo Configured topic is $gcp_topic
echo Target device is $device_id
echo

ACTIVATE_LOG=/config/gw/nodes/gw*/activate.log
more $ACTIVATE_LOG | cat
if fgrep "Processing provisioning request for device $device_id" $ACTIVATE_LOG; then
    result=pass
    detail="Found provisioning request"
else
    result=fail
    detail="No provisioning request"
fi
TEST_NAME="cloud.udmi.provision"
TEST_DESCRIPTION="Validates dynamic provisioning request"
RESULT_AND_SUMMARY="RESULT $result $TEST_NAME $detail"
write_out_result $REPORT "$TEST_NAME" "$TEST_DESCRIPTION" \
                 "$skip" "$RESULT_AND_SUMMARY"


timeout 90 validator/bin/validate $project_id $schema_path pubsub $subscription local/ || true

function message_report {
    message_type=$1
    base=out/devices/$device_id/$message_type
    ls -l $base* || true

    if [ -f "$base.out" ]; then
        result=fail
        detail=`head -n 1 $base.out`
    elif [ -f "$base.json" ]; then
        result=pass
        detail="Payload successfully validated"
    else
        result=fail
        detail="No result found"
    fi

    TEST_NAME="cloud.udmi.$message_type"
    TEST_DESCRIPTION="Validates device $message_type payload."
    RESULT_AND_SUMMARY="RESULT $result $TEST_NAME $detail"
    write_out_result $REPORT "$TEST_NAME" "$TEST_DESCRIPTION" \
                     "$skip" "$RESULT_AND_SUMMARY"
}

for message_type in $message_types; do
    message_report $message_type
done

fgrep RESULT $REPORT

echo Done with test_udmi
