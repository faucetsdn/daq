# Dockerfile for running the corresponding faux device.
# Make sure when building this image, the working directory specified in command is DAQ folder.

FROM daq/aardvark:latest

# Initial dependencies
RUN $AG update && $AG install isc-dhcp-client ethtool network-manager netcat\
    python ifupdown openssl ssh nano apache2-utils nmap

# Get telnet dependencies
RUN $AG update && $AG install -y telnetd
RUN $AG update && $AG install xinetd

# Get SSH dependencies
COPY subset/security/ssh_additions.config ssh_additions.config
RUN cat ssh_additions.config >> /etc/ssh/sshd_config

# SSH login fix. Otherwise user is kicked off after login
RUN sed 's@session\s*required\s*pam_loginuid.so@session optional pam_loginuid.so@g' -i /etc/pam.d/sshd

# Get HTTP/HTTPS dependencies
RUN $AG update && $AG install nginx
COPY subset/security/nginxpass.conf /root/nginx/
COPY subset/security/nginxfail.conf /root/nginx/
COPY subset/security/nginx-site /var/www/nginx-site

# Setup source folder in container
COPY subset/security .

# Run the pass test
CMD ["security_passwords/src/main/test/test_docker_files/setup_servers.sh", "pass"]
