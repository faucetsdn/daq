#!/bin/bash -e

# Entry point for the security.admin.password test - Runs the test on all protocols <http|https|telnet|ssh> in parallel
# and writes the output into reports file to be used by DAQ.

source reporting.sh

# Hard coded paths.
REPORT_FOR_DAQ="/tmp/report.txt"
RESULTS_FOLDER="/tmp/results"
LOGS_FOLDER="/tmp/logs"
MODULE_CONFIG="/tmp/module_config.json"

# Hard coded files and names.
HTTP_LOG_FILE="$LOGS_FOLDER/security_password_http.log"
HTTPS_LOG_FILE="$LOGS_FOLDER/security_password_https.log"
SSH_LOG_FILE="$LOGS_FOLDER/security_password_ssh.log"
TELNET_LOG_FILE="$LOGS_FOLDER/security_password_telnet.log"

HTTP_RESULTS_FILE="$RESULTS_FOLDER/security_password_http.result"
HTTPS_RESULTS_FILE="$RESULTS_FOLDER/security_password_https.result"
SSH_RESULTS_FILE="$RESULTS_FOLDER/security_password_ssh.result"
TELNET_RESULTS_FILE="$RESULTS_FOLDER/security_password_telnet.result"

# Hard coded json keys for jq
DICTIONARY_FOLDER_KEY=".modules.password.dictionary_folder"
HTTP_PORT_KEY=".modules.password.http_port"
HTTPS_PORT_KEY=".modules.password.https_port"
SSH_PORT_KEY=".modules.password.ssh_port"
TELNET_PORT_KEY=".modules.password.telnet_port"

# Default configuration values.
CONFIG_DICTIONARY_FOLDER="resources/default"
CONFIG_HTTP_PORT=80
CONFIG_HTTPS_PORT=443
CONFIG_SSH_PORT=22
CONFIG_TELNET_PORT=23

# Retrieves the value specified in provided key from the module config.
# $1 Module config file path
# $2 jq JSON key string
function get_module_config_value_from_key() {
  cat $1 | jq '$2'
}

# Retrieve a modified version of the test description for a protocol.
# $1 Protocol name
function get_test_description() {
  echo "Verify all device manufacturer default passwords are changed for protocol: $1, and new passwords are set."
}

# Retrieve a modified version of the test name for a protocol.
# $1 Protocol name
function get_test_name() {
  echo "security.admin.password.$1"
}

# Main function

# Prints out useful information for logs.
echo "Password test starting on docker container: $TARGET_IP..."

# Check module config and update any default values.
echo "Checking module_config.json for any default configurations to overwrite..."
USER_SPECIFIED_DICTIONARY_FOLDER="$(get_module_config_value_from_key $MODULE_CONFIG $DICTIONARY_FOLDER_KEY)"
USER_SPECIFIED_HTTP_PORT="$(get_module_config_value_from_key $MODULE_CONFIG $HTTP_PORT_KEY)"
USER_SPECIFIED_HTTPS_PORT="$(get_module_config_value_from_key $MODULE_CONFIG $HTTPS_PORT_KEY)"
USER_SPECIFIED_SSH_PORT="$(get_module_config_value_from_key $MODULE_CONFIG $SSH_PORT_KEY)"
USER_SPECIFIED_TELNET_PORT="$(get_module_config_value_from_key $MODULE_CONFIG $TELNET_PORT_KEY)"

echo "Overwriting default configurations with user specified values... (If any)"
[ $USER_SPECIFIED_DICTIONARY_FOLDER != "null" ] && CONFIG_DICTIONARY_FOLDER=$USER_SPECIFIED_DICTIONARY_FOLDER
[ $USER_SPECIFIED_HTTP_PORT != "null" ] && CONFIG_HTTP_PORT=$USER_SPECIFIED_HTTP_PORT
[ $USER_SPECIFIED_HTTPS_PORT != "null" ] && CONFIG_HTTPS_PORT=$USER_SPECIFIED_HTTPS_PORT
[ $USER_SPECIFIED_SSH_PORT != "null" ] && CONFIG_SSH_PORT=$USER_SPECIFIED_SSH_PORT
[ $USER_SPECIFIED_TELNET_PORT != "null" ] && CONFIG_TELNET_PORT=$USER_SPECIFIED_TELNET_PORT

echo "Print out configurations set..."
echo "DICTIONARY_FOLDER: $CONFIG_DICTIONARY_FOLDER"
echo "HTTP_PORT: $CONFIG_HTTP_PORT"
echo "HTTPS_PORT: $CONFIG_HTTPS_PORT"
echo "SSH_PORT: $CONFIG_SSH_PORT"
echo "TELNET_PORT: $CONFIG_TELNET_PORT"

# Run the password test for each supported protocol.
echo "Running password test for each protocol..."
mkdir -p $LOGS_FOLDER
./run_password_test_for_protocol $TARGET_IP http $CONFIG_HTTP_PORT $CONFIG_DICTIONARY_FOLDER $RESULTS_FOLDER &> "$LOGS_FOLDER/security_password_http.log" &
./run_password_test_for_protocol $TARGET_IP https $CONFIG_HTTPS_PORT $CONFIG_DICTIONARY_FOLDER $RESULTS_FOLDER &> "$LOGS_FOLDER/security_password_https.log" &
./run_password_test_for_protocol $TARGET_IP ssh $CONFIG_SSH_PORT $CONFIG_DICTIONARY_FOLDER $RESULTS_FOLDER &> "$LOGS_FOLDER/security_password_ssh.log" &
./run_password_test_for_protocol $TARGET_IP telnet $CONFIG_TELNET_PORT $CONFIG_DICTIONARY_FOLDER $RESULTS_FOLDER &> "$LOGS_FOLDER/security_password_telnet.log" &
wait

# Write the tests results to the DAQ report.
echo "Writing test results and logs to DAQ report..."
write_out_result $REPORT_FOR_DAQ "$(get_test_name "http")" "$(get_test_description "http")" $HTTP_LOG_FILE $HTTP_RESULTS_FILE
write_out_result $REPORT_FOR_DAQ "$(get_test_name "https")" "$(get_test_description "https")" $HTTPS_LOG_FILE $HTTPS_RESULTS_FILE
write_out_result $REPORT_FOR_DAQ "$(get_test_name "ssh")" "$(get_test_description "ssh")" $SSH_LOG_FILE $SSH_RESULTS_FILE
write_out_result $REPORT_FOR_DAQ "$(get_test_name "telnet")" "$(get_test_description "telnet")" $TELNET_LOG_FILE $TELNET_RESULTS_FILE

echo "Done!"
