#!/bin/bash -e

source reporting.sh

REPORT=./reports/report.txt
TEST_DESC="Verify all default passwords are updated and new Google provided passwords are set."

make_log_files() {
  touch /tmp/http_report.log
  touch /tmp/https_report.log
  touch /tmp/telnet_report.log
  touch /tmp/ssh_report.log
}

run_password_test_all_protocols () {
  echo Running on http
  java -jar security_passwords/build/libs/security_passwords-1.0-SNAPSHOT-all.jar $1 http 80 $2 nginx-site &> /tmp/http_report.log &

  echo Running on https
  java -jar security_passwords/build/libs/security_passwords-1.0-SNAPSHOT-all.jar $1 https 443 $2 nginx-site &> /tmp/https_report.log &

  echo Running on telnet
  java -jar security_passwords/build/libs/security_passwords-1.0-SNAPSHOT-all.jar $1 telnet 23 $2 nginx-site &> /tmp/telnet_report.log &

  echo Running on ssh
  java -jar security_passwords/build/libs/security_passwords-1.0-SNAPSHOT-all.jar $1 ssh 22 $2 nginx-site &> /tmp/ssh_report.log &

  wait
}

if [ -n "$TARGET_IP" ]; then
  echo Using the host address from $TARGET_IP and mac address $TARGET_MAC
  run_password_test_all_protocols $TARGET_IP $TARGET_MAC

  make_log_files

  write_out_result $REPORT \
    "security.passwords.http" \
    "$TEST_DESC" \
    "$(cat /tmp/http_report.log)" \
    "$(cat ./reports/http_report.txt)"

  write_out_result $REPORT \
    "security.passwords.https" \
    "$TEST_DESC" \
    "$(cat /tmp/https_report.log)" \
    "$(cat ./reports/https_report.txt)"

  write_out_result $REPORT \
    "security.passwords.telnet" \
    "$TEST_DESC" \
    "$(cat /tmp/telnet_report.log)" \
    "$(cat ./reports/telnet_report.txt)"

  write_out_result $REPORT \
    "security.passwords.ssh" \
    "$TEST_DESC" \
    "$(cat /tmp/ssh_report.log)" \
    "$(cat ./reports/ssh_report.txt)"

  cp -r ./reports/report.txt /tmp/report.txt
else
  echo Wrong parameters, password test cannot continue. | tee /tmp/report.txt
fi
