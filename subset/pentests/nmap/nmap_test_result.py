""" NMAP Test Result (return from NmapTest.test() )
"""
from dataclasses import dataclass


@dataclass
class NmapTestResult:
    """ NMAP Test Result

    Attributes:
        result          pass/fail
        ports           list of matched ports, each item an instance of
                        NmapPort
        services        list of matched services, each item an instance of
                        NmapPort
        log             (auto generated if not provided) - logging output for
                        DAQ
        summary         (auto generated if not provided) - result summary for
                        DAQ results table
        overall_result  (auto generated if not provided) - pass/fail
                        basically opposite of result
    """
    result: str
    ports: list
    services: list
    log: str = ''
    summary: str = ''
    overall_result: str = ''

    def __post_init__(self):
        if not self.overall_result:
            self.overall_result = ('fail' if self.result else 'pass')

        # Generate auto summary
        if not self.summary:
            if not self.result:
                self.summary = 'Only allowed ports found open.'
            else:
                summary_text = []
                if self.services:
                    summary_text.append('service found running')

                if self.ports:
                    summary_text.append('ports found open')

                self.summary = ', '.join(summary_text).capitalize()

        if not self.log:
            # We explicitly match ports and services so there can be duplicates
            matches = set(self.ports + self.services)

            for port in matches:
                self.log += 'Port %-5s (%s) %6s %s\n' % (
                    port.port,
                    port.protocol,
                    port.state,
                    port.service)

            self.log = self.log.rstrip()
