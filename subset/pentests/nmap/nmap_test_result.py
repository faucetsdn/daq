""" NMAP Test Result (return from NmapTest.test() )
"""
from dataclasses import dataclass


@dataclass
class NmapTestResult:
    """ NMAP Test Result

    Attributes:
        result      pass/fail
        ports       list of matched ports, each item an instance of NmapPort
        services    list of matched services, each item an instance of NmapPort
        log         (auto generated) - logging output for DAQ
        summary     (auto generated) - result summary for DAQ results table
    """
    result: str
    ports: list
    services: list
    log: str = ''
    summary: str = ''

    def __post_init__(self):
        self.overall_result = ('fail' if self.result else 'pass')

        # Generate Summary
        if not self.result:
            self.summary = 'Ports not open'
        else:
            summary_text = []
            if self.services:
                summary_text.append('services found running')

            if self.ports:
                summary_text.append('ports found open')

            self.summary = ', '.join(summary_text).capitalize()

        # We explicitly match ports and services so there can be duplicates
        matches = set(self.ports + self.services)

        for port in matches:
            self.log += 'Port %s(%s) \t %s \t %s\n' % (
                port.port,
                port.protocol,
                port.state,
                port.service
            )

        self.log = self.log.rstrip()
