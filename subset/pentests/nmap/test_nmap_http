#!/bin/bash -e

source $TEST_ROOT/reporting.sh

CONFIG=$TEST_ROOT/config/device/module_config.json

# Setting for nmap aggressiveness.
SPEED=-T3

# security.nmap.http test variables
REPORT_HTTP=$TEST_ROOT/tmp/report_http.txt
LOG_HTTP=$TEST_ROOT/tmp/http.log
OPENPORTSLIST_LOG_HTTP=$TEST_ROOT/tmp/http.ports.log
REDACTED_LOG_HTTP=$TEST_ROOT/tmp/http.report.log
TEST_NAME_HTTP="security.nmap.http"
TEST_DESCRIPTION_HTTP="Check that the device does not have open ports exposing an unencrypted web interface using HTTP"
SUMMARY_HTTP=""

rm -f $LOG_HTTP $REDACTED_LOG_HTTP $OPENPORTSLIST_LOG_HTTP $REPORT_HTTP

touch $REDACTED_LOG_HTTP
touch $REPORT_HTTP
touch $OPENPORTSLIST_LOG_HTTP

if [[ -f $CONFIG ]]; then
    test_http=$(jq '.modules.nmap.test_http' $CONFIG)
else
    test_http=true
fi

if [[ $test_http == true || $test_http == null ]]; then
    # configure and run the security.nmap.http test
    option="-A --script http-methods" # Full NSE scan with the http-methods script
    portslist=-p- # scan all ports
    echo -e "\nTesting target $TARGET_IP to check open ports exposing HTTP servers"
    nmap -v -n $SPEED $option --host-timeout=4m --open $portslist -oG $LOG_HTTP $TARGET_IP > /dev/null
    cat $LOG_HTTP
    cat $LOG_HTTP | tee -a $REDACTED_LOG_HTTP
    rm -f $TEST_ROOT/.fail
    grep -oh '[0-9]*/open[^[:space:]]*' $LOG_HTTP | while IFS=/ read -ra parts; do
        state=${parts[1]}
        if [ "$state" == open ]; then
            port=${parts[0]}
            proto=${parts[4]}
            echo $proto
            if [ "$proto" == http ]; then
                touch $TEST_ROOT/.fail
                echo Failing ${parts[*]} | sed 's/,$//' | tee -a $REDACTED_LOG_HTTP
                echo -n ${parts[0]}"," | tee -a $OPENPORTSLIST_LOG_HTTP
            fi
        fi
    done
    if [ -f $TEST_ROOT/.fail ]; then
        echo Open http ports:
        cat $REDACTED_LOG_HTTP
        result=fail
        SUMMARY_HTTP="Some ports are running http servers: `cat $OPENPORTSLIST_LOG_HTTP | sed 's/,$//'`."
    else
        echo No running http servers have been found. | tee -a $REDACTED_LOG_HTTP
        result=pass
        SUMMARY_HTTP="No running http servers have been found."
    fi
else
    echo Skipping disabled http tests.
    result=skip
    SUMMARY_HTTP="Disabled in configuration."
fi

RESULT_AND_SUMMARY_HTTP="RESULT $result $TEST_NAME_HTTP $SUMMARY_HTTP"

write_out_result $REPORT_HTTP \
                 "$TEST_NAME_HTTP" \
                 "$TEST_DESCRIPTION_HTTP" \
                 "$(cat $REDACTED_LOG_HTTP)" \
                 "$RESULT_AND_SUMMARY_HTTP"
