from nmap_test import nmap_test
import argparse

def parse_command_line_args():
    parser = argparse.ArgumentParser()
    
    parser.add_argument('report_file', type=str, 
                    help='Path to text file report output')

    parser.add_argument('nmap_xml', type=str, nargs='+', 
                    help='Path to nmap XML output file')

    return parser.parse_args()

def test_smtp():
    name = 'security.services.smtp'
    description = 'No SMTP servers running'
    result = nmap.test(protocol='tcp', ports=[25, 465, 587], services='smtp')
    nmap.write_report(name, description, result )

def test_telnet():
    name = 'security.services.telnet'
    description = 'description'
    result = nmap.test(protocol='tcp', ports=50106, services='telnet')
    nmap.write_report(name, description, result )

def test_pop():
    name = 'security.services.pop'
    description = 'description'
    result = nmap.test(protocol='tcp', ports=50106, services='pop')
    nmap.write_report(name, description, result )

def test_imap():
    name = 'security.services.imap'
    description = 'description'
    result = nmap.test(protocol='tcp', ports=[143, 993], services='imap')
    nmap.write_report(name, description, result )

def test_ftp():
    name = 'security.services.ftp'
    description = 'description'
    result = nmap.test(protocol='tcp', ports=[20, 21], services='ftp')
    nmap.write_report(name, description, result )

args = parse_command_line_args()

nmap = nmap_test(args.report_file, *tuple(args.nmap_xml))

# Run the tests
test_smtp()
test_ftp()
test_imap()
test_pop()
test_telnet()
