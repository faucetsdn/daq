# Image name: daqf/faux1
#
# Faux device for framework development/testing.
#

FROM daqf/aardvark:latest as java_build

# Run this separately so it can be shared with other builds.
RUN $AG update && $AG install openjdk-8-jre

RUN $AG update && $AG install openjdk-8-jdk git

ENV BACHASH=94a794a756ee0d37c6a2e53e08747ee021415aa8

RUN bin/retry_cmd git clone https://github.com/grafnu/bacnet4j.git --single-branch \
  && cd bacnet4j && git reset --hard $BACHASH && ../bin/retry_cmd ./gradlew shadow

COPY pubber/ pubber/
RUN pubber/bin/build

# Dockerfile to build older version of SSH and SSL
FROM daqf/aardvark:latest as ssh_build

RUN $AG update && $AG install wget make build-essential gcc libz-dev ca-certificates

# Build SSH, OpenSSL from source and configure
RUN wget https://www.openssl.org/source/openssl-1.0.2g.tar.gz && \
      tar -xzf openssl-1.0.2g.tar.gz && \
      cd openssl-1.0.2g && \
      ./config --prefix=/usr/local/openssl --openssldir=/usr/local/openssl && \
      make && \ 
      make install && \
      cd .. && \
      mkdir /etc/ssh && \
      mkdir /var/empty && \
      chown root:sys /var/empty && \
      chmod 755 /var/empty && \
      groupadd sshd && \
      useradd -g sshd -c 'sshd privsep' -d /var/empty -s /bin/false sshd && \
      wget https://mirrors.mit.edu/pub/OpenBSD/OpenSSH/portable/openssh-7.2p1.tar.gz && \
      tar -xzf openssh-7.2p1.tar.gz && \
      cd openssh-7.2p1 && \
      ./configure --with-ssl-dir=/usr/local/openssl --with-ssh1 && \
      make && \ 
      make install

#This will install the OpenSSH binaries in /usr/local/bin, configuration files
#in /usr/local/etc, the server in /usr/local/sbin, etc. To specify a different
#installation prefix, use the --prefix option to configure:

FROM daqf/aardvark:latest

COPY --from=ssh_build /usr/local/openssl/* /usr/local/openssl/
COPY --from=ssh_build /usr/local/sbin/* /usr/local/sbin/
COPY --from=ssh_build /usr/local/bin/* /usr/local/bin/
COPY --from=ssh_build /usr/local/etc/* /usr/local/etc/

RUN mkdir /var/empty && \
    chown root:sys /var/empty && \
    chmod 755 /var/empty && \
    groupadd sshd && \
    useradd -g sshd -c 'sshd privsep' -d /var/empty -s /bin/false sshd

# Run this separately so it can be shared with other builds.
RUN $AG update && $AG install openjdk-8-jre
RUN $AG update && $AG install openjdk-8-jdk git
RUN $AG update && $AG install isc-dhcp-client ethtool network-manager netcat curl\
    python ifupdown openssl nano apache2-utils ntpdate 

# Additional OS dependencies
RUN $AG update && $AG install -y telnetd && $AG install xinetd nginx

COPY subset/network/NTPClient NTPClient
RUN cd NTPClient && ./gradlew build
COPY subset/network/TransportClient TransportClient

# Prefetch resolvconf to dynamically install at runtime in start_faux.
RUN $AG update && cd /tmp && ln -s ~/bin bin && $AG download resolvconf && mv resolvconf_*.deb ~

RUN /usr/local/bin/ssh-keygen -A

COPY docker/include/bin/start_faux docker/include/bin/failing bin/

COPY --from=java_build /root/bacnet4j/*.jar bacnet4j/
COPY docker/include/bin/bacnet_discover bin/

COPY --from=java_build /root/pubber/build/libs/*.jar pubber/build/libs/
COPY pubber/bin/run pubber/bin/

COPY subset/pentests/brute_server.py pentests/
COPY subset/security/tlsfaux tlsfaux/

COPY subset/bacnet/bacnetTests/ bacnetTests
COPY subset/bacnet/bacnetTests/src/main/resources/Faux*.json tmp/
COPY --from=java_build /root/bacnet4j/bacnet4j-1.0-SNAPSHOT-all.jar bacnetTests/libs/
RUN cd bacnetTests && ./gradlew build

# HTTP/HTTPS dependency
COPY subset/security/nginxpass.conf /root/nginx/
COPY subset/security/nginxfail.conf /root/nginx/
COPY subset/security/nginx-site /var/www/nginx-site

# Weird workaround for problem running tcdump in a privlidged container.
RUN mv /usr/sbin/tcpdump /usr/bin/tcpdump

ENTRYPOINT ["bin/start_faux"]
